// Code generated by "github.com/hedhyw/semerr"; DO NOT EDIT.

package httperr

import (
	"errors"
	"net/http"

	"github.com/hedhyw/semerr/pkg/v1/semerr"
)

// Code returns http status code for err.
func Code(err error) int {
	switch err.(type) {
	case nil:
		return http.StatusOK
	{{- range $errorDef := . }}
	case semerr.{{ $errorDef.Name }}:
		return {{ $errorDef.HTTPStatus }}
	{{- end }}
	}

	if err = errors.Unwrap(err); err == nil {
		return http.StatusInternalServerError
	}

	return Code(err)
}



// Wrap wraps the `err` with an error corresponding to the `code`.
// If there is no `err` for this code then the `err` will be returned
// without wrapping.
func Wrap(err error, code int) error {
	switch code {
	{{- range $errorDef := . }}
	{{- if $errorDef.Reverse }}
	case {{ $errorDef.HTTPStatus }}:
		return semerr.New{{ $errorDef.Name }}(err)
	{{- end }}
	{{- end }}
	default:
		return err
	}
}
